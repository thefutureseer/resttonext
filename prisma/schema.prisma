generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URL")
}

model User {
  id                 Int                @id @default(autoincrement())
  name               String
  email              String             @unique
  phonenumber        String?
  address            String?
  profilepicture     String?
  orders             Order[]            // One-to-Many: One User can have many Orders
  pastexperiences    Experience[]       // One-to-Many: One User can have many past Experiences
  role               role_type @default(user)
  rating             Float?
  createdat          DateTime           @default(now())
  updated            DateTime           @default(now())
}

model SpiritualLeader {
  id                 Int                @id @default(autoincrement())
  name               String
  expertise          String?
  bio                String?
  profilepicture     String?
  contactinfo        String?
  rating             Float?
  pastbeneficiaries  Experience[]       // One-to-Many: One SpiritualLeader can have many past Experiences
  orders             Order[] //link back to order model
  role               role_type @default(spiritual_leader)
  createdat          DateTime            @default(now())
  updatedat          DateTime            @default(now())
}

model Order {
  id                 Int                @id @default(autoincrement())
  userid             Int
  user               User               @relation(fields: [userid], references: [id])
  spiritualleaderid  Int
  spiritualleader    SpiritualLeader    @relation(fields: [spiritualleaderid], references: [id])
  problemtosolve     String
  experiencewanted   String
  contactvia         ContactMethod
  status             OrderStatus        @default(pending)
  createdat          DateTime           @default(now())
  updatedat          DateTime           @updatedAt
  experienceid       Int                @unique
  experience         Experience?        @relation(fields: [experienceid], references: [id])
}

model Experience {
  id                 Int                @id @default(autoincrement())
  userid             Int
  user               User               @relation(fields: [userid], references: [id])
  spiritualleaderid  Int
  spiritualleader    SpiritualLeader    @relation(fields: [spiritualleaderid], references: [id])
  problemtosolve     String
  experiencewanted   String
  contactvia         ContactMethod
  createdat          DateTime           @default(now())
  updatedat          DateTime           @default(now())
  order              Order? // optional in order of user 
}

enum ContactMethod {
  phone_call
  text_message
  video_call
  in_person
}

enum OrderStatus {
  pending
  completed
  canceled
  resumed_later
}

enum role_type {
  user
  spiritual_leader
  spiritual_leader_admin
  super_admin
  moderator
  support
}